// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoUniversidad.Context;

#nullable disable

namespace ProyectoUniversidad.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240414035717_PK")]
    partial class PK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoUniversidad.Models.Asignatura_seleccion", b =>
                {
                    b.Property<int>("seleccion_id")
                        .HasColumnType("int");

                    b.Property<int>("asignatura_id")
                        .HasColumnType("int");

                    b.Property<string>("calificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("seleccion_id", "asignatura_id");

                    b.ToTable("Asignatura_seleccion");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Cuenta", b =>
                {
                    b.Property<int>("cuenta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cuenta_id"));

                    b.Property<string>("cuenta_clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cuenta_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("cuenta_id");

                    b.HasIndex("cuenta_nombre")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Cuentas_cobrar", b =>
                {
                    b.Property<int>("cuenta_cobrar_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cuenta_cobrar_id"));

                    b.Property<string>("cuenta_estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("cuenta_monto_pendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("cuenta_monto_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("estudiante_id")
                        .HasColumnType("int");

                    b.Property<int>("seleccion_id")
                        .HasColumnType("int");

                    b.HasKey("cuenta_cobrar_id");

                    b.ToTable("Cuentas_cobrar");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Estudiante", b =>
                {
                    b.Property<int>("estudiante_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("estudiante_id"));

                    b.Property<int>("carrera_id")
                        .HasColumnType("int");

                    b.Property<int>("cuenta_id")
                        .HasColumnType("int");

                    b.Property<bool>("estudiante_activo")
                        .HasColumnType("bit");

                    b.Property<string>("estudiante_apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estudiante_correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estudiante_documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("estudiante_fecha_ingreso")
                        .HasColumnType("date");

                    b.Property<decimal>("estudiante_indice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estudiante_nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estudiante_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estudiante_telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estudiante_trimestre")
                        .HasColumnType("int");

                    b.Property<int>("tipo_documento_id")
                        .HasColumnType("int");

                    b.HasKey("estudiante_id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Factura_Servicio", b =>
                {
                    b.Property<int>("factura_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("factura_id"));

                    b.Property<int>("estudiante_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("factura_fecha")
                        .HasColumnType("date");

                    b.Property<decimal>("factura_monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("metodo_pago_id")
                        .HasColumnType("int");

                    b.Property<int>("servicio_id")
                        .HasColumnType("int");

                    b.HasKey("factura_id");

                    b.ToTable("Factura_servicio");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Factura_pago", b =>
                {
                    b.Property<int>("pago_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pago_id"));

                    b.Property<int>("cuenta_cobrar_id")
                        .HasColumnType("int");

                    b.Property<decimal>("factura_monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("fecha_factura")
                        .HasColumnType("date");

                    b.Property<int>("metodo_pago_id")
                        .HasColumnType("int");

                    b.HasKey("pago_id");

                    b.ToTable("Factura_pago");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Metodo_pago", b =>
                {
                    b.Property<int>("metodo_pago_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("metodo_pago_id"));

                    b.Property<string>("nombre_metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("metodo_pago_id");

                    b.ToTable("Metodo_pago");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Pensum", b =>
                {
                    b.Property<int>("carrera_id")
                        .HasColumnType("int");

                    b.Property<int>("asignatura_id")
                        .HasColumnType("int");

                    b.Property<int>("pensum_trimestre")
                        .HasColumnType("int");

                    b.HasKey("carrera_id", "asignatura_id");

                    b.ToTable("Pensum");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Profesor", b =>
                {
                    b.Property<int>("profesor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("profesor_id"));

                    b.Property<int>("id_cuenta")
                        .HasColumnType("int");

                    b.Property<string>("profesor_apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profesor_documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profesor_nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipo_documento_id")
                        .HasColumnType("int");

                    b.HasKey("profesor_id");

                    b.ToTable("Profesors");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Rol", b =>
                {
                    b.Property<int>("rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rol_id"));

                    b.Property<string>("rol_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rol_id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("ProyectoUniversidad.Models.Servicio", b =>
                {
                    b.Property<int>("servicio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("servicio_id"));

                    b.Property<decimal>("servicio_costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("servicio_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("servicio_id");

                    b.HasIndex("servicio_nombre")
                        .IsUnique();

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("UniversidadAPI.Models.Asignatura", b =>
                {
                    b.Property<int>("asignatura_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("asignatura_id"));

                    b.Property<string>("asignatura_aula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("asignatura_creditos")
                        .HasColumnType("int");

                    b.Property<string>("asignatura_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("profesor_id")
                        .HasColumnType("int");

                    b.HasKey("asignatura_id");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("UniversidadAPI.Models.Carrera", b =>
                {
                    b.Property<int>("carrera_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("carrera_id"));

                    b.Property<string>("carrera_area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carrera_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("carrera_id");

                    b.HasIndex("carrera_nombre")
                        .IsUnique();

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("UniversidadAPI.Models.Seleccion", b =>
                {
                    b.Property<int>("seleccion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("seleccion_id"));

                    b.Property<int>("estudiante_id")
                        .HasColumnType("int");

                    b.Property<int>("seleccion_creditos")
                        .HasColumnType("int");

                    b.Property<string>("seleccion_estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("seleccion_indice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("seleccion_trimestre")
                        .HasColumnType("int");

                    b.HasKey("seleccion_id");

                    b.ToTable("Seleccions");
                });

            modelBuilder.Entity("UniversidadAPI.Models.Tipo_documento", b =>
                {
                    b.Property<int>("tipo_documento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tipo_documento_id"));

                    b.Property<string>("tipo_documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipo_documento_id");

                    b.ToTable("Tipo_documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
